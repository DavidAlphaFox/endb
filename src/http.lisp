(defpackage :endb/http
  (:use :cl)
  (:export #:make-api-handler)
  (:import-from :bordeaux-threads)
  (:import-from :lack.request)
  (:import-from :com.inuoe.jzon)
  (:import-from :trivial-utf-8)
  (:import-from :endb/sql))
(in-package :endb/http)

(defun make-api-handler (db)
  (let ((write-lock (bt:make-lock)))
    (lambda (env)
      (let ((req (lack.request:make-request env)))
        (if (equal "/sql" (lack.request:request-path-info req))
            (if (member (lack.request:request-method req) '(:get :post))
                (let* ((write-db (endb/sql:begin-write-tx db))
                       (original-md (endb/sql/expr:db-meta-data write-db))
                       (sql (if (and (eq :post (lack.request:request-method req))
                                     (equal "application/sql" (lack.request:request-content-type req)))
                                (trivial-utf-8:utf-8-bytes-to-string (lack.request:request-content req))
                                (cdr (assoc "q" (lack.request:request-parameters req) :test 'equal)))))
                  (if sql
                      (if (member (gethash "accept" (lack.request:request-headers req)) '("*/*" "application/json") :test 'equal)
                          (multiple-value-bind (result result-code)
                              (endb/sql:execute-sql write-db sql)
                            (cond
                              ((or result (and (listp result-code)
                                               (not (null result-code))))
                               (list 200
                                     '(:content-type "application/json")
                                     (list (if result
                                               (com.inuoe.jzon:stringify result)
                                               "[]"))))
                              (result-code (if (eq :get (lack.request:request-method req))
                                               '(405 nil nil)
                                               (bt:with-lock-held (write-lock)
                                                 (if (eq original-md (endb/sql/expr:db-meta-data db))
                                                     (progn
                                                       (setf db (endb/sql:commit-write-tx db write-db))
                                                       (list 201
                                                             '(:content-type "application/json")
                                                             (list (com.inuoe.jzon:stringify result-code))))
                                                     '(409 nil nil)))))
                              (t '(500 nil nil))))
                          '(406 nil nil))
                      '(400 nil nil)))
                '(405 nil nil))
            '(404 nil nil))))))
